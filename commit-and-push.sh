#!/bin/bash

# ========================================
# SCRIPT DE COMMIT E PUSH AUTOM√ÅTICO
# ========================================
# 
# USO: ./commit-and-push.sh "mensagem do commit"
# 
# CONFIGURA√á√ÉO DO TOKEN (OBRIGAT√ìRIA):
# Para evitar erros 403, configure o token do GitHub:
# 
# 1. TEMPOR√ÅRIO (s√≥ para esta sess√£o):
#    export GITHUB_TOKEN="ghp_seu_token_aqui"
# 
# 2. PERMANENTE (adicione no ~/.zshrc ou ~/.bashrc):
#    echo 'export GITHUB_TOKEN="ghp_seu_token_aqui"' >> ~/.zshrc
#    source ~/.zshrc
# 
# 3. GERAR NOVO TOKEN:
#    GitHub.com ‚Üí Settings ‚Üí Developer settings ‚Üí Personal access tokens ‚Üí Tokens (classic)
#    Generate new token ‚Üí Selecione: repo, workflow
# 
# ========================================

# Verificar se o token est√° configurado
if [ -z "$GITHUB_TOKEN" ]; then
    echo "‚ö†Ô∏è  GITHUB_TOKEN n√£o configurado!"
    echo ""
    echo "üìù CONFIGURA√á√ÉO NECESS√ÅRIA:"
    echo "1. Tempor√°rio: export GITHUB_TOKEN=\"ghp_seu_token_aqui\""
    echo "2. Permanente: echo 'export GITHUB_TOKEN=\"ghp_seu_token_aqui\"' >> ~/.zshrc"
    echo "3. Recarregar: source ~/.zshrc"
    echo ""
    echo "üîó Gerar token: GitHub.com ‚Üí Settings ‚Üí Developer settings ‚Üí Personal access tokens"
    echo ""
fi

if [ -z "$1" ]; then
    echo "‚ùå Erro: Forne√ßa uma mensagem de commit"
    echo "Uso: ./commit-and-push.sh \"sua mensagem de commit\""
    exit 1
fi

COMMIT_MESSAGE="$1"
CURRENT_DATE=$(date +"%Y-%m-%d %H:%M:%S")

# ========================================
# FRONTEND REPOSITORY
# ========================================
echo "\nüì± === FRONTEND REPOSITORY ==="
cd frontend || { echo "‚ùå Pasta frontend n√£o encontrada"; exit 1; }

if git status --porcelain | grep -q .; then
    echo "‚úÖ Mudan√ßas detectadas no frontend"
    git add src/ public/ package.json package-lock.json yarn.lock tsconfig.json server.ts start/ config/ docs/ env.example env.local README.md README_FUNCIONALIDADES.md REPOSITORIOS_SETUP.md commit-and-push.sh create-backup.sh
    git commit -m "feat: $COMMIT_MESSAGE"
    
    # Push com token se configurado
    if [ -n "$GITHUB_TOKEN" ]; then
        git remote set-url origin https://$GITHUB_TOKEN@github.com/tallescarrelo/pagmus-frontend.git
        git push origin main
        git remote set-url origin https://github.com/tallescarrelo/pagmus-frontend.git
    else
        git push origin main
    fi
    echo "‚úÖ Frontend commitado e enviado com sucesso!"
else
    echo "‚ÑπÔ∏è  Nenhuma mudan√ßa detectada no frontend"
fi
cd ..

# ========================================
# BACKEND REPOSITORY
# ========================================
echo "\nüîß === BACKEND REPOSITORY ==="
cd backend || { echo "‚ùå Pasta backend n√£o encontrada"; exit 1; }

if git status --porcelain | grep -q .; then
    echo "‚úÖ Mudan√ßas detectadas no backend"
    git add .
    git commit -m "feat: $COMMIT_MESSAGE"
    
    # Push com token se configurado
    if [ -n "$GITHUB_TOKEN" ]; then
        git remote set-url origin https://$GITHUB_TOKEN@github.com/tallescarrelo/pagmus-backend.git
        git push origin main
        git remote set-url origin https://github.com/tallescarrelo/pagmus-backend.git
    else
        git push origin main
    fi
    echo "‚úÖ Backend commitado e enviado com sucesso!"
else
    echo "‚ÑπÔ∏è  Nenhuma mudan√ßa detectada no backend"
fi
cd ..

echo "\nüéâ Processo conclu√≠do!"
echo "üìä Status dos reposit√≥rios:"
echo "   Frontend: https://github.com/tallescarrelo/pagmus-frontend"
echo "   Backend:  https://github.com/tallescarrelo/pagmus-backend" 